<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ltd.scau.mybatis.mapper.UserRelationMapper">
  <resultMap id="BaseResultMap" type="ltd.scau.mybatis.po.UserRelation">
    <result column="user_a_id" jdbcType="BIGINT" property="userAId" />
    <result column="user_b_id" jdbcType="BIGINT" property="userBId" />
    <result column="relation" jdbcType="INTEGER" property="relation" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_a_id, user_b_id, relation, update_time
  </sql>
  <select id="selectByExample" parameterType="ltd.scau.mybatis.po.UserRelationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="ltd.scau.mybatis.po.UserRelationExample">
    delete from user_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ltd.scau.mybatis.po.UserRelation">
    insert into user_relation (user_a_id, user_b_id, relation, 
      update_time)
    values (#{userAId,jdbcType=BIGINT}, #{userBId,jdbcType=BIGINT}, #{relation,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="ltd.scau.mybatis.po.UserRelation">
    insert into user_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userAId != null">
        user_a_id,
      </if>
      <if test="userBId != null">
        user_b_id,
      </if>
      <if test="relation != null">
        relation,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userAId != null">
        #{userAId,jdbcType=BIGINT},
      </if>
      <if test="userBId != null">
        #{userBId,jdbcType=BIGINT},
      </if>
      <if test="relation != null">
        #{relation,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ltd.scau.mybatis.po.UserRelationExample" resultType="java.lang.Long">
    select count(*) from user_relation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="findAllWaitingForMe" resultType="ltd.scau.mybatis.po.User">
      select u.*
      from user_relation ur inner join user u on ur.user_a_id = u.id
      where ur.relation = 1 and ur.user_b_id = #{id}
    </select>
  <select id="findAllFriends" resultType="ltd.scau.mybatis.po.User">
    select u.*
    from (
      select user_a_id id from user_relation where relation = 2 and user_b_id = #{id}
      union
      select user_b_id id from user_relation where relation = 2 and user_a_id = #{id}
    ) ur
    natural join user u
  </select>
  <select id="findAllRefusedMe" resultType="ltd.scau.mybatis.po.User">
      select u.*
      from user_relation ur inner join user u on ur.user_b_id = u.id
      where ur.relation = 0 and ur.user_a_id = #{id}
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_relation
    <set>
      <if test="record.userAId != null">
        user_a_id = #{record.userAId,jdbcType=BIGINT},
      </if>
      <if test="record.userBId != null">
        user_b_id = #{record.userBId,jdbcType=BIGINT},
      </if>
      <if test="record.relation != null">
        relation = #{record.relation,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_relation
    set user_a_id = #{record.userAId,jdbcType=BIGINT},
      user_b_id = #{record.userBId,jdbcType=BIGINT},
      relation = #{record.relation,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>